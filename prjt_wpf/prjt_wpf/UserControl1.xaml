<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:prjt_wpf"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" x:Class="prjt_wpf.UserControl1"
             mc:Ignorable="d" Background="#FF706767" Height="734" Width="1111.25"

            >
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault" Value="False"/>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="OpacityMask" TargetName="contentPresenter" Value="#FFEEA7A7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFEE0404" Offset="0.967"/>
                                            <GradientStop Color="#FFCD6A6A" Offset="0.433"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
    </UserControl.Triggers>

    <Grid Margin="0,0,40,37">


        <telerik:RadCarousel x:Name="Rad" HorizontalAlignment="Left" Height="280" Margin="113,0,0,0" VerticalAlignment="Top" Width="833" Loaded="RadCarousel_Loaded" Background="{x:Null}"/>

        <Grid HorizontalAlignment="Left" Height="166" Margin="174,285,0,0" VerticalAlignment="Top" Width="688" Background="#FFD6C9C9">

            <Button Content="Modifier" Height="42" Margin="238,178,269,-54" VerticalAlignment="Top" Click="Button_Click_1" Style="{DynamicResource ButtonStyle1}" >
                <Button.Background>
                    <RadialGradientBrush>
                        <GradientStop Color="#FFEE0404" Offset="0.967"/>
                        <GradientStop Color="White" Offset="0.433"/>
                    </RadialGradientBrush>
                </Button.Background>
            </Button>
            <TextBox HorizontalAlignment="Left" x:Name="textbox1" Height="35" Margin="293,30,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="144" Text="{Binding ElementName=Rad,Path=SelectedItem.id_filiere,Mode=OneWay}"/>
            <TextBox HorizontalAlignment="Left" x:Name="textbox2" Height="34" Margin="293,99,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="144" Text="{Binding ElementName=Rad,Path=SelectedItem.nom_filiere,Mode=OneWay}"/>
            <Label Content="ID" HorizontalAlignment="Left" Height="34" Margin="87,31,0,0" VerticalAlignment="Top" Width="68" FontSize="18"/>
            <Label Content="Nom de filiere" HorizontalAlignment="Left" Height="34" Margin="87,99,0,0" VerticalAlignment="Top" Width="131" FontSize="18" RenderTransformOrigin="0.85,1.394"/>
            <Button Content="Supprimer" HorizontalAlignment="Left" Height="37" Margin="477,178,0,-49" VerticalAlignment="Top" Width="167" Click="Button_Click_2" Style="{DynamicResource ButtonStyle1}">
                <Button.Background>
                    <RadialGradientBrush>
                        <GradientStop Color="Black"/>
                        <GradientStop Color="White" Offset="0.357"/>
                        <GradientStop Color="#FF040404" Offset="0.067"/>
                        <GradientStop Color="#FF9C1616" Offset="0.13"/>
                        <GradientStop Color="#FFA52D2D" Offset="0.963"/>
                        <GradientStop Color="White" Offset="0.033"/>
                    </RadialGradientBrush>
                </Button.Background>
            </Button>
            <Button Content="Ajouter" HorizontalAlignment="Left" Margin="10,178,0,-49" Width="181" Click="Button_Click" Height="37" VerticalAlignment="Top" Style="{DynamicResource ButtonStyle1}">
                <Button.Background>
                    <RadialGradientBrush>
                        <GradientStop Color="#FFE64838" Offset="0.93"/>
                        <GradientStop Color="#FFE6C7C7" Offset="0.433"/>
                    </RadialGradientBrush>
                </Button.Background>
            </Button>

        </Grid>

    </Grid>
</UserControl>
